volumes:
  postgres_data:
  vscode_extensions:
  vscode_insiders_extensions:

services:
  postgres:
    image: postgres:12.9-alpine
    volumes:
      # We'll store the postgres data in the 'postgres_data' volume we defined:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
    ports:
      - published: ${SEPOMEX_PG_PORT:-5432}
        target: 5432
    environment:
      POSTGRES_USER: ${USER:-you}
      POSTGRES_HOST_AUTH_METHOD: trust

  # The default development container:
  development: &app
    image: icalialabs/sepomex-web:development
    build: &app-build
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        DEVELOPER_UID: ${UID:-1000}
        DEVELOPER_USERNAME: ${USER:-you}

    volumes:
      # Mount the app code into the app containers:
      - .:/workspaces/sepomex

    # Keep the stdin open, so we can attach to our app container's process
    # and do things such as byebug, etc:
    stdin_open: true

    # Enable sending signals (CTRL+C, CTRL+P + CTRL+Q) into the container:
    tty: true

    # Required for ptrace-based debuggers like C++, Go, and Rust
    cap_add:
      - SYS_PTRACE
      - NET_ADMIN
    security_opt:
      - seccomp:unconfined

    entrypoint: /workspaces/sepomex/bin/dev-entrypoint

    # Link to our postgres and redis services, so they can be visible from our
    # app service containers:
    depends_on:
      - postgres

    command: rails s -b 0.0.0.0

    ports:
      - ${SEPOMEX_WEB_PORT:-3000}:3000

    # Specify environment variables available for our app containers. We'll
    # leave a YML anchor in case we need to override or add more variables if
    # needed on each app service:
    environment: &app_env
      RAILS_LOG_TO_STDOUT: "true"

      DEBIAN_FRONTEND: dialog

      DATABASE_URL: postgres://postgres:5432/?encoding=unicode

  # The tests container:
  tests:
    <<: *app

    image: icalialabs/sepomex-web${TESTING_IMAGE_TAG:-:testing}
    build:
      <<: *app-build
      target: testing

    # The command we want to execute by default when running the container
    command: rspec

    ports: []
    profiles: [ci, tests]

  # This container is used by Visual Studio Code + Remote Container:
  devcontainer:
    <<: *app
    ports: []
    profiles: [vscode]

    volumes:
      - .:/workspaces/sepomex
      - vscode_extensions:/home/${USER:-you}/.vscode-server/extensions
      - vscode_insiders_extensions:/home/${USER:-you}/.vscode-server-insiders/extensions
    environment:
      <<: *app_env
      VSCODE_CONTEXT: "yes"

      # Use VSCode as editor:
      EDITOR: code -w

  staging-web:
    <<: *app

    image: icalialabs/sepomex-web:latest
    build:
      <<: *app-build
      target: release

    # The command we want to execute by default when running the container
    command: rspec

    profiles: [staging]
