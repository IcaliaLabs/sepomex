# (Copied from IcaliaLabs/portal)

on:
  workflow_call:
    outputs:
      git-commit-short-sha:
        description: "The Git commit short SHA"
        value: ${{ jobs.test-and-build.outputs.git-commit-short-sha }}
      container-image-digest:
        description: "The Docker image digest which uniquely identifies the built image"
        value: ${{ jobs.test-and-build.outputs.container-image-digest }}

# On this project, was some changes to the original workflow, since we are hosting this
# project on Azure Web Apps, we don't need to deploy to Google Cloud Run, so we removed
# the deploy-to-staging and deploy-to-production jobs.
# Instead to deploy, we're just building the image and running the tests. The image will be
# pushed to the Dockerhub, because it's free and we don't need to pay for it.

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest

    outputs:
      git-commit-short-sha: ${{ steps.variables.outputs.git-commit-short-sha }}
      container-image-digest: ${{ steps.build-and-push-release-image.outputs.digest }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.0.2

      - # We'll generate a unique id that we'll use to identify the build run
        # on our systems
        name: Generate UUID for build
        id: uuidgen
        run: echo "::set-output name=uuid::$(uuidgen)"

      - name: Set additional variables
        id: variables
        uses: icalia-actions/common-variables@v0.0.3

      - name: Set build timestamp
        id: set-build-timestamp
        run: echo "::set-output name=timestamp::$(date +%s)"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.2.1
        with:
          version: v0.9.1

      - name: Build Test Image
        id: build-test-image
        uses: docker/build-push-action@v3.1.1
        with:
          load: true
          target: testing
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            DEVELOPER_UID=${{ steps.variables.outputs.runner-uid }}
            DEVELOPER_USERNAME=${{ steps.variables.outputs.runner-user }}
          tags: |
            icalialabs/sepomex-web:testing-${{ steps.variables.outputs.git-dasherized-branch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests
        env:
          UID: ${{ steps.variables.outputs.runner-uid }}
          USER: ${{ steps.variables.outputs.runner-user }}
          TESTING_IMAGE_TAG: ":testing-${{ steps.variables.outputs.git-dasherized-branch }}"
        run: docker compose run --rm tests

      - name: Archive system spec screenshots
        uses: actions/upload-artifact@v3.1.0
        if: always()
        with:
          name: system-spec-screenshots
          retention-days: 7
          path: |
            tmp/capybara/screenshots

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Release Image
        id: build-and-push-release-image
        uses: docker/build-push-action@v5
        with:
          push: true
          target: release
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            DEVELOPER_UID=${{ steps.variables.outputs.runner-uid }}
            DEVELOPER_USERNAME=${{ steps.variables.outputs.runner-user }}
            DEPLOY_NAME=production
          tags: |
            icalia/sepomex:${{ steps.variables.outputs.git-commit-short-sha }}
            icalia/sepomex:${{ steps.variables.outputs.git-dasherized-branch }}
            icalia/sepomex:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
